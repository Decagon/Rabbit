<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssumeArmorGamesAuth" xml:space="preserve">
    <value>토큰 은 사용자 이름과 암호를 제공 했기 때문에 갑옷 게임 인증이 선택되었다.</value>
  </data>
  <data name="AssumeFacebookAuth" xml:space="preserve">
    <value>사용자 이름 이 제공 되지 않았기 때문에 페이스 북 인증이 선택되었다.</value>
  </data>
  <data name="EmailPasswordNullError" xml:space="preserve">
    <value>이메일 / 토큰 및 암호 필드는 비워 둘 수 없습니다 .</value>
  </data>
  <data name="PasswordTooLong" xml:space="preserve">
    <value>두 번째 토큰은 32 자 이어야합니다.</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>두 번째 토큰은 32 자 이어야합니다.</value>
  </data>
  <data name="TokenLessThan100Chars" xml:space="preserve">
    <value>토큰은 더 이상 100 자 이하 여야 합니다.</value>
  </data>
  <data name="TokenMustBeAlphamumeric" xml:space="preserve">
    <value>토큰은 숫자 이어야합니다.</value>
  </data>
  <data name="UsernameTooLong" xml:space="preserve">
    <value>첫 번째 토큰은 32 자 이어야합니다.</value>
  </data>
  <data name="UsernameTooShort" xml:space="preserve">
    <value>첫 번째 토큰은 32 자 이어야합니다.</value>
  </data>
  <data name="The_room_ID_cannot_be_null" xml:space="preserve">
    <value>객실 ID 는 null 일 수 없습니다.</value>
  </data>
  <data name="ArmorGamesLogOnFailure" xml:space="preserve">
    <value>갑옷 게임 에 로그인 할 수 없습니다.</value>
  </data>
  <data name="ArmorGamesNotSupported" xml:space="preserve">
    <value>갑옷 게임 로그인은 지정된 게임 이 지원되지 않습니다.</value>
  </data>
  <data name="InvalidRoomUrl" xml:space="preserve">
    <value>방 아이디 URL을 인식 할 수 없습니다 . URL이 유효한지 확인합니다.</value>
  </data>
  <data name="MouseBreakerAuthFailure" xml:space="preserve">
    <value>Mousebreaker 인증을위한 자격이 무효입니다 .</value>
  </data>
  <data name="MousebreakerNotSupported" xml:space="preserve">
    <value>Mousebreaker 로그인이 지정된 게임 이 지원되지 않습니다.</value>
  </data>
  <data name="unknownUrl" xml:space="preserve">
    <value>알 수없는 URL입니다.</value>
  </data>
  <data name="UrlCorrectRoomIDNot" xml:space="preserve">
    <value>URL이 정확 하지만, 방 ID가 잘못되었습니다.</value>
  </data>
  <data name="UsernameNotSupported" xml:space="preserve">
    <value>아이디 로그인은 지정된 게임 이 지원되지 않습니다.</value>
  </data>
</root>